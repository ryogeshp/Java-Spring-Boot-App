pipeline {
  agent {
    docker {
      image 'ryogeshp/yogeshp_mvn_java_docker:v1.0'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        // Clone the repository with credentials
        git branch: 'main', 
           url: 'https://github.com/ryogeshp/r.yogesh_p.git',
           credentialsId: 'github'  // Authenticate for private repos
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd Java-mvn-sonar-argo-k8s/java-spring-boot-app && mvn clean package' 
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.221.10.162:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd Java-mvn-sonar-argo-k8s/java-spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "ryogeshp/jenkins-hero:${env.BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd Java-mvn-sonar-argo-k8s/java-spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "r.yogesh_p"
        GIT_USER_NAME = "ryogeshp"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            set -e  # Fail script on error
            
            # Configure Git (local to the repository)
            git config --local user.email "rjprajapati08@gmail.com"
            git config --local user.name "ryogeshp"
            
            # Update deployment.yml with build number
            sed -i "s/replaceImageTag/${env.BUILD_NUMBER}/g" Java-mvn-sonar-argo-k8s/java-spring-boot-app-manifests/deployment.yml
            
            # Commit and push changes
            git add Java-mvn-sonar-argo-k8s/java-spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${env.BUILD_NUMBER}"
            git push "https://$GITHUB_TOKEN@github.com/$GIT_USER_NAME/$GIT_REPO_NAME" HEAD:main
          '''
        }
      }
    }
  }
}

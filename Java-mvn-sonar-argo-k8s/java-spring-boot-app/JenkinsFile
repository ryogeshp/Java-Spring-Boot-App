pipeline {
  agent {
    docker {
      image 'ryogeshp/yogeshp_mvn_java_docker:v1.0'
      args ''  // No root user or Docker socket mount
    }
  }
  stages {
    stage('Cleanup') {
      steps {
        cleanWs()  // Clean workspace before checkout
      }
    }
    stage('Checkout') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: 'main']],
          extensions: [
            [$class: 'RelativeTargetDirectory', relativeTargetDir: 'Java-mvn-sonar-argo-k8s']
          ],
          userRemoteConfigs: [
            [
              url: 'https://github.com/ryogeshp/r.yogesh_p.git',
              credentialsId: 'github'
            ]
          ]
        ])
      }
    }
    stage('Build and Test') {
      steps {
        sh '''
          cd Java-mvn-sonar-argo-k8s/java-spring-boot-app
          mvn clean package
          chmod -R a+rwX target  # Fix permissions
        '''
      }
    }
    stage('Static Code Analysis') { ... }
    stage('Build and Push Docker Image') { ... }
    stage('Update Deployment File') { ... }
  }
}
